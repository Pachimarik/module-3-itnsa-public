- hosts: all
  gather_facts: 'no'
  become: 'yes'
  tasks:
    - name: "Create folder for data app"
      file:
        path: /data
        state: directory
        mode: '0777'
    
    - name: "install docker"
      shell: "amazon-linux-extras install docker -y && systemctl enable --now docker"

    - name: "install docker-compose"
      shell: "curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose"

    - name: "Create folder for app"
      file:
        path: /app
        state: directory
        mode: '0777'
    
    - name: "Copy app"
      copy: 
        src: "{{ lookup('env','HOME') }}/module-3-itnsa-public/app/app.py"
        dest: /app/app.py
        remote_src: "no"

    - name: "Copy app"
      copy: 
        src: "{{ lookup('env','HOME') }}/module-3-itnsa-public/app/Dockerfile"
        dest: /app/Dockerfile
        remote_src: "no"

    - name: "Copy app"
      copy: 
        src: "{{ lookup('env','HOME') }}/module-3-itnsa-public/app/env.yml"
        dest: /app/env.yml
        remote_src: "no"

    - name: "Build container"
      shell: "cd /app && docker build -t app:release ."

    - name: "auto run app"
      copy:
        src: "{{ lookup('env','HOME') }}/module-3-itnsa-public/docker_startup.sh"
        dest: /app/docker_startup.sh
        remote_src: "no"
        mode: +x
    - name: start conftainer
      shell: "cd / && ./app/docker_startup.sh"
    
    - name: "edit crontab"
      lineinfile:
        path: /etc/crontab
        line: "@reboot root    /app/docker_startup.sh"


