- hosts: 'all'
  gather_facts: 'no'
  become: 'yes'
  tasks:
############### INSTALL DOCKER AND MODULES #############################
    - name: "Install docker"
      yum:
        name:
          - docker
    
    - name: "Install docker-compose"
      get_url:
        url: https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: +x
  
    - name: "Enable docker"
      systemd:
        state: started
        name: docker
        enabled: yes
        masked: no

    - name: "Install python-pip"
      yum:
        name:
          - python-pip

    - name: "Update pip"
      shell: python2.7 -m pip install --upgrade setuptools && python2.7 -m pip install --upgrade pip

    - name: "Install py module for docker"
      shell: python2.7 -m pip install docker==4.4.4 --ignore-installed && pip install docker-compose
################### INSTALL NGINX ######################################  
    - name: "Install nginx"
      shell: amazon-linux-extras install nginx1 -y

    - name: "Enable nginx"
      systemd:
        name: nginx
        enabled: yes
        masked: no
    
    - name: "Create folder for certs"
      file:
        path: /etc/nginx/private
        state: directory

    - name: "Copy config"
      copy:
        src: ../nginx/nginx.conf 
        dest: /etc/nginx/nginx.conf

################# APP ########################################

    - name: "Create folder for app"
      file:
        path: /app
        state: directory
    
    - name: "Move files for app"
      copy: src=../app/{{ item }} dest=/app/
      with_items:
      - .env
      - app.py
      - docker-compose.yml
      - Dockerfile
      - env.yml

    - name: "Run docker-compose"
      docker_compose:
        project_src: /app
        build: yes
      register: output

########### REPLICATION ###############

    - name: "Install ncurses-compat-libs"
      yum:
        name:
          - ncurses-compat-libs
    
    - name: "Copy glusterfs repository"
      copy:
        src: ../glusterfs/Gluster.repo
        dest: /etc/yum.repos.d/Gluster.repo

    - name: "disable repo amzn2-core"
      shell:  yum-config-manager --disable amzn2-core

    - name: "clear yum all"
      shell: yum clean all

    - name: "Install glusterfs-server"
      yum:
        update_cache: 'yes'
        name:
          - glusterfs-server

    - name: "enable repo amzn2-core"
      shell:  yum-config-manager --enable amzn2-core && yum update -y
    
    - name: "Enable and start gluster"
      systemd:
        name: glusterd
        enabled: yes
        state: started
        masked: no
    - name: "Create mountpoint for gluster"
      file:
        path: /rv
        state: directory
############ Setting gluster #######
    # - name: "Create replica volume"
    #   gluster_volume:
    #     state: present
    #     name: datastorage
    #     replicas: 3
    #     bricks: /app/data,/app/data,/app/data
    #     cluster:
    #       - "{{ lookup('env','INSTANCE_1') }}"
    #       - "{{ lookup('env','INSTANCE_2') }}"
    #       - "{{ lookup('env','INSTANCE_3') }}"
    #     force: true

    # - name: start gluster volume
    #   gluster_volume:
    #     state: started
    #     name: datastorage