- hosts: 'all'
  gather_facts: 'no'
  become: 'yes'
  tasks:
############### INSTALL DOCKER AND MODULES #############################
    - name: "Install docker"
      yum:
        name:
          - docker
    
    - name: "Install docker-compose"
      get_url:
        url: https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: +x
  
    - name: "Enable docker"
      systemd:
        state: started
        name: docker
        enabled: yes
        masked: no

    - name: "Install python-pip"
      yum:
        name:
          - python-pip

    - name: "Update pip"
      shell: python2.7 -m pip install --upgrade setuptools && python2.7 -m pip install --upgrade pip

    - name: "Install py module for docker"
      shell: python2.7 -m pip install docker==4.4.4 --ignore-installed && pip install docker-compose

################### INSTALL NGINX ######################################  
    - name: "Install nginx"
      shell: amazon-linux-extras install nginx1 -y

    - name: "Enable nginx"
      systemd:
        name: nginx
        enabled: yes
        masked: no

################# APP ########################################

    - name: "Create folder for app"
      file:
        path: /app
        state: directory

    - name: "Create volume"
      file:
        path: /app/data
        state: directory
    
    - name: "Move files for app"
      copy: src=../app/{{ item }} dest=/app/
      with_items:
      - .env
      - app.py
      - docker-compose.yml
      - Dockerfile
      - env.yml

    - name: "Run docker-compose"
      docker_compose:
        project_src: /app
        build: yes
      register: output
############## certbot ################
    - name: "Install epel"
      shell: amazon-linux-extras install epel -y
      
    - name: "install certbot"
      yum:
        update_cache: 'yes'
        name:
          - certbot
          - python2-certbot-nginx

########### REPLICATION ###############
    - name: "Install ncurses-compat-libs"
      yum:
        name:
          - ncurses-compat-libs
    
    - name: "Copy glusterfs repository"
      copy:
        src: ../glusterfs/Gluster.repo
        dest: /etc/yum.repos.d/Gluster.repo

    - name: "disable repo amzn2-core"
      shell:  yum-config-manager --disable amzn2-core
    
    - name: "disable epel repository"
      shell: yum-config-manager --disable epel

    - name: "clear yum all"
      shell: yum clean all

    - name: "Install glusterfs-server"
      yum:
        update_cache: 'yes'
        name:
          - glusterfs-server

    - name: "enable repo amzn2-core"
      shell:  yum-config-manager --enable amzn2-core && yum update -y
    
    - name: "Enable and start gluster"
      systemd:
        name: glusterd
        enabled: yes
        state: started
        masked: no
    
    - name: "Create mountpoint for gluster"
      file:
        path: /rv
        state: directory
    
    - name: "create kostiyl"
      copy:
        dest: /mount.sh
        mode: +x
        content: |
          #!/bin/bash
          mount -a
    
    - name: "record in crontab"
      lineinfile:
        path: /etc/crontab
        line: |
          @reboot root    /mount.sh 

########## env for gluster #########
    - name: "ipnode1"
      shell: host {{ lookup('env','INSTANCE_1') }} | awk '{print $NF}' | sed 's/.$//'
      register: name1

    - name: "ipnode2"
      shell: host {{ lookup('env','INSTANCE_2') }} | awk '{print $NF}' | sed 's/.$//'
      register: name2

    - name: "ipnode3"
      shell: host {{ lookup('env','INSTANCE_3') }} | awk '{print $NF}' | sed 's/.$//'
      register: name3

    - set_fact:
        name1={{ name1.stdout }}
        name2={{ name2.stdout }}
        name3={{ name3.stdout }}

    - name: "Add peers glusterfs"
      shell: "gluster peer probe {{ name1 }} && gluster peer probe {{ name2 }} && gluster peer probe {{ name3 }} "

#################### create volume ####################
    - name: "create volume"
      shell: "gluster volume create datastorage replica 3  {{ name1 }}:/rv {{ name2 }}:/rv {{ name3 }}:/rv force"
      run_once: true
    
    - name: "start volume"
      shell: gluster volume start datastorage
      run_once: true
