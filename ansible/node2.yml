- hosts: 'node2'
  gather_facts: 'no'
  become: 'yes'
  tasks:
    - name: "stop nginx"
      systemd:
        state: stopped
        name: nginx
        
    - name: "Create cert to node2"
      shell: "printf 'y' |certbot certonly --standalone -d {{ lookup('env','INSTANCE_2') }}.sslip.io --register-unsafely-without-email --force-interactive"
      run_once: true

    - name: Creating a file with content
      copy:
        dest: "/etc/nginx/nginx.conf"
        content: |
          # For more information on configuration, see:
          #   * Official English Documentation: http://nginx.org/en/docs/
          #   * Official Russian Documentation: http://nginx.org/ru/docs/

          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
          include /usr/share/nginx/modules/*.conf;

          events {
              worker_connections 1024;
          }

          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

              access_log  /var/log/nginx/access.log  main;

              sendfile            on;
              tcp_nopush          on;
              tcp_nodelay         on;
              keepalive_timeout   65;
              types_hash_max_size 4096;

              include             /etc/nginx/mime.types;
              default_type        application/octet-stream;

              # Load modular configuration files from the /etc/nginx/conf.d directory.
              # See http://nginx.org/en/docs/ngx_core_module.html#include
              # for more information.
              include /etc/nginx/conf.d/*.conf;


              upstream app_ssl {
                  server {{ lookup('env','INSTANCE_1') }}:8080;
                  server {{ lookup('env','INSTANCE_2') }}:8080;
                  server {{ lookup('env','INSTANCE_3') }}:8080;
              }

              server {
                  listen 80 ;
                  
                  location / {
                      return 301 https://$host$request_uri;
                  }
              }

              server {
                  listen 443 ssl;
                  ssl_certificate /etc/letsencrypt/live/{{ lookup('env','INSTANCE_2') }}.sslip.io/fullchain.pem;
                  ssl_certificate_key /etc/letsencrypt/live/{{ lookup('env','INSTANCE_2') }}.sslip.io/privkey.pem;

                  location / {
                      proxy_next_upstream error timeout http_500;
                      proxy_pass http://app_ssl;
                  }

              }
          }

    - name: "Restart nginx"
      systemd:
        state: restarted
        daemon_reload: yes
        name: nginx

    - name: "ipnode2"
      shell: host {{ lookup('env','INSTANCE_2') }} | awk '{print $NF}' | sed 's/.$//'
      register: name2
   
    - set_fact:
        name2={{ name2.stdout }}

    - name: "add record in fstab"
      lineinfile:
        path: /etc/fstab
        line: |
          {{ name2 }}:/datastorage   /app/data       glusterfs       defaults        0       0 
    
    - name: "autorun mount"
      shell: cd / && ./mount.sh